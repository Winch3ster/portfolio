  /*
  Auto-generated by: https://github.com/pmndrs/gltfjsx
  */
  import { useKeyboardControls } from "@react-three/drei";
  import React, { useEffect, useRef } from "react";
  import { useGLTF, useAnimations } from "@react-three/drei";
  import { useFrame } from "@react-three/fiber";
  import {a } from '@react-spring/three'
  import character from '../assets/3d/PortfolioMainCharacterThreeJSReady2.glb';
import { RigidBody, RapierRigidBody } from "@react-three/rapier";

//import { characterIsMoving } from "./characterController"
import { Controls } from "../pages/Home";

//characterIsMoving, setCharacterIsMoving,

  const MainCharacter = ({...props}) => {

    const jumpPressed = useKeyboardControls((state) => state[Controls.jump]);
  const leftPressed = useKeyboardControls((state) => state[Controls.left]);
  const rightPressed = useKeyboardControls((state) => state[Controls.right]);
  const backPressed = useKeyboardControls((state) => state[Controls.back]);
  const forwardPressed = useKeyboardControls(
    (state) => state[Controls.forward]
  );

  const keys = [leftPressed, rightPressed, backPressed, forwardPressed]  


    //let charcterIsMoving = false;
    //let playerRotationAngle = 0;
    const mesh = useRef();
    

    const { nodes, materials, animations } = useGLTF(character);
    const { actions } = useAnimations(animations, mesh);
    const rotationAngle = useRef(0);

    

    //mesh.rotation.y = defaultRotationOffset;

    function checkKeyPressed(){
      //return true if there is direction of motion
      //Return false if none
      //console.log("Is running")
  
      for(let i = 0; i< keys.length; i++){
        if(keys[i] == true){
          return true
        }
      }
     
      return false
    }


    useEffect(() =>{
      

      if(checkKeyPressed()){
        actions['run'].play();
        actions['idle'].stop(); 
        
  
      }else{
        actions['idle'].play();
        actions['run'].stop();
      }
      
    
      mesh.current.rotation.y = directionOffset()

    }, [keys])
    
 
    
    /*

     
      console.log("Delta: " + delta)

      if(checkKeyPressed()){
      

      }


    // arrayOfAxis = [x, -x, z, -z]
    let arrayOfAxis = [0, 0 , 0 ,0] //if for instance -x is activated append 180 to it


    //an object to track which direction is in motion
    let keyPressed = {
      forward: false,
      backward: false,
      left: false,
      right: false
    }

    //check if any directionMotionIsfalse
    function checkKeyPressed(){
      //return true if there is direction of motion
      //Return false if none
      //console.log("Is running")

      for (const direction in keyPressed) {
        //console.log("Direction of motion " + direction + ": "  + keyPressed[direction])

        if (keyPressed[direction]) {
          return true
        }
      }
      return false
    }

    const move = () =>{
      console.log("Moving char")
      console.log(mesh.current.position)
      
    }


      const handleKeyDown = (e) => {
    
    console.log("Key down is pressed")
    //e.stopPropagation(); //Mouse click only do what is in this function
    e.preventDefault(); // DO not reload page


    
    switch (e.key) {
      case 'w':
        //setCharacterIsMoving(true);
        //playerRotationAngle = Math.PI;
        keyPressed.forward = true;
        arrayOfAxis[0]= 1;

        mesh.current.position.x += 1;
       move();
        // Move forward
        // Implement your logic for forward movement here
        break;
      case 'd':
        playerRotationAngle = Math.PI/2;
     //setCharacterIsMoving(true);
        keyPressed.right = true;    
        //mesh.current.rotation.y = 90;

        arrayOfAxis[2]= 90;
        // Rotate clockwise
        //rotationAngle.current -= 0.02; // Adjust the rotation speed as needed
        //mesh.current.rotation.y = rotationAngle.current;

       


        break;
      // Add more cases for other keys as needed
      case 's':
        //setCharacterIsMoving(true);
        keyPressed.backward = true;
        playerRotationAngle = 0;
        
        //mesh.current.rotation.y = 0;
        arrayOfAxis[3]= 180;

        mesh.current.position.x -= 1;
        // Rotate clockwise
        //rotationAngle.current -= 0.02; // Adjust the rotation speed as needed
        //mesh.current.rotation.y = rotationAngle.current;
        break;
      case 'a':
        playerRotationAngle = -Math.PI/2;
        keyPressed.left = true;
        //setCharacterIsMoving(true);
        arrayOfAxis[3]= 270;

        //mesh.current.rotation.y = -90;


        // Rotate clockwise
        //rotationAngle.current -= 0.02; // Adjust the rotation speed as needed
        //mesh.current.rotation.y = rotationAngle.current;
        break;
      default:
        break;

    }
    mesh.current.rotation.y = directionOffset()

    //
    //console.log("Key down checkKeyPressed: " + checkKeyPressed())


    

  }

  const handleKeyUp = (e) => {
    //e.stopPropagation(); //Mouse click only do what is in this function
    //e.preventDefault(); // DO not reload page

    
    switch (e.key) {
      case 'w':
        keyPressed.forward = false;
        
        break;
      case 'd':
        keyPressed.right = false;
        arrayOfAxis[1] = 90;
      
        break;
      // Add more cases for other keys as needed
      case 's':
        keyPressed.backward = false;
        arrayOfAxis[2] = 180
        break;
      case 'a':
        keyPressed.left = false;
        arrayOfAxis[3] = 270
        break;
        
      default:
        break;

    }
    mesh.current.rotation.y = directionOffset()
    
    //setCharacterIsMoving(checkKeyPressed())
    //console.log("Key released")
  }

  */


  function directionOffset() {
    var directionOffset = 0 // w
// [leftPressed, rightPressed, backPressed, forwardPressed]  

    if (keys[2]) {
        if (keys[1]) {
            directionOffset = Math.PI / 4 // w+a
        } else if (keys[0]) {
            directionOffset = - Math.PI / 4 // w+d
        }else if(keys[3]){
            directionOffset =0;
            
        }
    } else if (keys[3]) {
        if (keys[1]) {
            directionOffset = Math.PI / 4 + Math.PI / 2 // s+a
        } else if (keys[0]) {
            directionOffset = -Math.PI / 4 - Math.PI / 2 // s+d
        } else {
            directionOffset = Math.PI // s
        }
    } else if (keys[1]) {
        directionOffset = Math.PI / 2 // a
    } else if (keys[0]) {
        directionOffset = -Math.PI / 2 // d
    }
    return directionOffset
  }


    return (
      <a.group  ref={mesh} {...props} dispose={null}>


 
        <group name="Scene">
          <group name="rig">

            <group name="Cube001">
              <skinnedMesh
                name="Cube002_1"
                geometry={nodes.Cube002_1.geometry}
                material={materials.brown}
                skeleton={nodes.Cube002_1.skeleton}
              />
              <skinnedMesh
                name="Cube002_2"
                geometry={nodes.Cube002_2.geometry}
                material={materials.pant}
                skeleton={nodes.Cube002_2.skeleton}
              />
            </group>
            <skinnedMesh
              name="Cube002"
              geometry={nodes.Cube002.geometry}
              material={materials.shirt}
              skeleton={nodes.Cube002.skeleton}
            />
            <skinnedMesh
              name="Cube003"
              geometry={nodes.Cube003.geometry}
              material={materials.brown}
              skeleton={nodes.Cube003.skeleton}
            />
            <skinnedMesh
              name="Cube004"
              geometry={nodes.Cube004.geometry}
              material={materials.brown}
              skeleton={nodes.Cube004.skeleton}
            />
            <skinnedMesh
              name="Cube005"
              geometry={nodes.Cube005.geometry}
              material={materials.brown}s
              skeleton={nodes.Cube005.skeleton}
            />
            <skinnedMesh
              name="Cube008"
              geometry={nodes.Cube008.geometry}
              material={materials.skin}
              skeleton={nodes.Cube008.skeleton}
            />
            <skinnedMesh
              name="Cylinder002"
              geometry={nodes.Cylinder002.geometry}
              material={materials.brown}
              skeleton={nodes.Cylinder002.skeleton}
            />


   
            <group name="Plane001">
              <skinnedMesh
                name="Plane002"
                geometry={nodes.Plane002.geometry}
                material={materials["Material.001"]}
                skeleton={nodes.Plane002.skeleton}
              />
              <skinnedMesh
                name="Plane002_1"
                geometry={nodes.Plane002_1.geometry}
                material={materials.eyebrow}
                skeleton={nodes.Plane002_1.skeleton}
              />
              <skinnedMesh
                name="Plane002_2"
                geometry={nodes.Plane002_2.geometry}
                material={materials.eyelashes}
                skeleton={nodes.Plane002_2.skeleton}
              />


                <skinnedMesh
                  name="Plane002_3"
                  geometry={nodes.Plane002_3.geometry}
                  material={materials.head}
                  skeleton={nodes.Plane002_3.skeleton}
                />

              

              <skinnedMesh
                name="Plane002_4"
                geometry={nodes.Plane002_4.geometry}
                material={materials.hair}
                skeleton={nodes.Plane002_4.skeleton}
              />
               
              <skinnedMesh
                name="Plane002_5"
                geometry={nodes.Plane002_5.geometry}
                material={materials.skin}
                skeleton={nodes.Plane002_5.skeleton}
              />
              
            

            </group>

            <primitive object={nodes.root} />
            <primitive object={nodes["MCH-torsoparent"]} />
            <primitive object={nodes["MCH-hand_ikparentL"]} />
            <primitive object={nodes["MCH-upper_arm_ik_targetparentL"]} />
            <primitive object={nodes["MCH-hand_ikparentR"]} />
            <primitive object={nodes["MCH-upper_arm_ik_targetparentR"]} />
            <primitive object={nodes["MCH-foot_ikparentL"]} />
            <primitive object={nodes["MCH-thigh_ik_targetparentL"]} />
            <primitive object={nodes["MCH-foot_ikparentR"]} />
            <primitive object={nodes["MCH-thigh_ik_targetparentR"]} />
          </group>
          <group
            name="WGT-rig_spine_fk"
            position={[0, 1.874, -0.427]}
            rotation={[1.723, 0, 0]}
            scale={0.406}
          />
          <group
            name="WGT-rig_spine_fk001"
            position={[0, 2.093, -0.4]}
            rotation={[1.694, 0, 0]}
            scale={0.221}
          />
          <group
            name="WGT-rig_spine_fk002"
            position={[0, 2.093, -0.4]}
            rotation={[1.539, 0, 0]}
            scale={0.28}
          />
          <group
            name="WGT-rig_spine_fk003"
            position={[0, 2.373, -0.409]}
            rotation={[1.537, 0, 0]}
            scale={0.265}
          />
          <group
            name="WGT-rig_tweak_spine"
            position={[0, 1.472, -0.489]}
            rotation={[1.723, 0, 0]}
            scale={0.203}
          />
          <group
            name="WGT-rig_tweak_spine001"
            position={[0, 1.874, -0.427]}
            rotation={[1.694, 0, 0]}
            scale={0.111}
          />
          <group
            name="WGT-rig_tweak_spine002"
            position={[0, 2.093, -0.4]}
            rotation={[1.539, 0, 0]}
            scale={0.14}
          />
          <group
            name="WGT-rig_tweak_spine003"
            position={[0, 2.373, -0.409]}
            rotation={[1.537, 0, 0]}
            scale={0.133}
          />
          <group
            name="WGT-rig_tweak_spine004"
            position={[0, 2.638, -0.418]}
            rotation={[2.399, 0, 0]}
            scale={0.027}
          />
          <group
            name="WGT-rig_torso"
            position={[0, 1.673, -0.458]}
            scale={0.704}
          />
          <group
            name="WGT-rig_hips"
            position={[0, 1.472, -0.489]}
            rotation={[1.723, 0, 0]}
            scale={0.293}
          />
          <group
            name="WGT-rig_chest"
            position={[0, 2.373, -0.409]}
            rotation={[1.537, 0, 0]}
            scale={0.391}
          />
          <group
            name="WGT-rig_breastL"
            position={[0.413, 2.179, -0.478]}
            rotation={[-Math.PI, 0, -Math.PI]}
            scale={0.225}
          />
          <group
            name="WGT-rig_breastR"
            position={[-0.413, 2.179, -0.478]}
            rotation={[0, 0, Math.PI]}
            scale={-0.225}
          />
          <group
            name="WGT-rig_shoulderL"
            position={[0.03, 2.598, -0.289]}
            rotation={[-0.118, -1.298, -0.121]}
            scale={0.537}
          />
          <group
            name="WGT-rig_upper_arm_parentL"
            position={[0.567, 2.561, -0.442]}
            rotation={[-0.947, -1.282, -2.19]}
            scale={0.091}
          />
          <group
            name="WGT-rig_upper_arm_fkL"
            position={[0.567, 2.561, -0.442]}
            rotation={[-0.947, -1.282, -2.19]}
            scale={0.365}
          />
          <group
            name="WGT-rig_forearm_fkL"
            position={[0.916, 2.477, -0.503]}
            rotation={[-2.105, -1.402, 2.957]}
            scale={0.284}
          />
          <group
            name="WGT-rig_hand_fkL"
            position={[1.196, 2.436, -0.479]}
            rotation={[-2.481, -1.538, 2.582]}
            scale={0.496}
          />
          <group
            name="WGT-rig_upper_arm_ikL"
            position={[0.567, 2.561, -0.442]}
            rotation={[-0.947, -1.282, -2.19]}
            scale={0.365}
          />
          <group
            name="WGT-rig_upper_arm_ik_targetL"
            position={[0.84, 2.272, -1.107]}
            rotation={[2.814, -0.118, 0.689]}
            scale={0.08}
          />
          <group
            name="WGT-rig_hand_ikL"
            position={[1.196, 2.436, -0.479]}
            rotation={[-2.481, -1.538, 2.582]}
            scale={0.496}
          />
          <group
            name="WGT-rig_VIS_upper_arm_ik_poleL"
            position={[0.916, 2.477, -0.503]}
            rotation={[Math.PI / 2, 0, -1.373]}
            scale={0.642}
          />
          <group
            name="WGT-rig_upper_arm_tweakL"
            position={[0.567, 2.561, -0.442]}
            rotation={[-0.947, -1.282, -2.19]}
            scale={0.091}
          />
          <group
            name="WGT-rig_upper_arm_tweakL001"
            position={[0.741, 2.519, -0.473]}
            rotation={[-0.947, -1.282, -2.19]}
            scale={0.091}
          />
          <group
            name="WGT-rig_forearm_tweakL"
            position={[0.916, 2.477, -0.503]}
            rotation={[-2.105, -1.402, 2.957]}
            scale={0.071}
          />
          <group
            name="WGT-rig_forearm_tweakL001"
            position={[1.056, 2.456, -0.491]}
            rotation={[-2.105, -1.402, 2.957]}
            scale={0.071}
          />
          <group
            name="WGT-rig_hand_tweakL"
            position={[1.196, 2.436, -0.479]}
            rotation={[-2.481, -1.538, 2.582]}
            scale={0.124}
          />
          <group
            name="WGT-rig_shoulderR"
            position={[-0.03, 2.598, -0.289]}
            rotation={[3.024, -1.298, -0.121]}
            scale={-0.537}
          />
          <group
            name="WGT-rig_upper_arm_parentR"
            position={[-0.567, 2.561, -0.442]}
            rotation={[2.195, -1.282, -2.19]}
            scale={-0.091}
          />
          <group
            name="WGT-rig_upper_arm_fkR"
            position={[-0.567, 2.561, -0.442]}
            rotation={[2.195, -1.282, -2.19]}
            scale={-0.365}
          />
          <group
            name="WGT-rig_forearm_fkR"
            position={[-0.916, 2.477, -0.503]}
            rotation={[1.037, -1.402, 2.957]}
            scale={-0.284}
          />
          <group
            name="WGT-rig_hand_fkR"
            position={[-1.196, 2.436, -0.479]}
            rotation={[0.661, -1.538, 2.582]}
            scale={-0.496}
          />
          <group
            name="WGT-rig_upper_arm_ikR"
            position={[-0.567, 2.561, -0.442]}
            rotation={[2.195, -1.282, -2.19]}
            scale={-0.365}
          />
          <group
            name="WGT-rig_upper_arm_ik_targetR"
            position={[-0.84, 2.272, -1.107]}
            rotation={[-0.327, -0.118, 0.689]}
            scale={-0.08}
          />
          <group
            name="WGT-rig_hand_ikR"
            position={[-1.196, 2.436, -0.479]}
            rotation={[0.661, -1.538, 2.582]}
            scale={-0.496}
          />
          <group
            name="WGT-rig_VIS_upper_arm_ik_poleR"
            position={[-0.916, 2.477, -0.503]}
            rotation={[-Math.PI / 2, 0, -1.373]}
            scale={-0.642}
          />
          <group
            name="WGT-rig_upper_arm_tweakR"
            position={[-0.567, 2.561, -0.442]}
            rotation={[2.195, -1.282, -2.19]}
            scale={-0.091}
          />
          <group
            name="WGT-rig_upper_arm_tweakR001"
            position={[-0.741, 2.519, -0.473]}
            rotation={[2.195, -1.282, -2.19]}
            scale={-0.091}
          />
          <group
            name="WGT-rig_forearm_tweakR"
            position={[-0.916, 2.477, -0.503]}
            rotation={[1.037, -1.402, 2.957]}
            scale={-0.071}
          />
          <group
            name="WGT-rig_forearm_tweakR001"
            position={[-1.056, 2.456, -0.491]}
            rotation={[1.037, -1.402, 2.957]}
            scale={-0.071}
          />
          <group
            name="WGT-rig_hand_tweakR"
            position={[-1.196, 2.436, -0.479]}
            rotation={[0.661, -1.538, 2.582]}
            scale={-0.124}
          />
          <group
            name="WGT-rig_neck"
            position={[0, 2.638, -0.418]}
            rotation={[2.36, 0, 0]}
            scale={0.082}
          />
          <group
            name="WGT-rig_head"
            position={[0, 2.696, -0.359]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={3.145}
          />
          <group
            name="WGT-rig_tweak_spine005"
            position={[0, 2.674, -0.378]}
            rotation={[2.288, 0, 0]}
            scale={0.014}
          />
          <group
            name="WGT-rig_thigh_parentL"
            position={[0.454, 1.435, -0.419]}
            rotation={[-1.665, 0.053, 0.066]}
            scale={0.177}
          />
          <group
            name="WGT-rig_thigh_fkL"
            position={[0.454, 1.435, -0.419]}
            rotation={[-1.665, 0.053, 0.066]}
            scale={0.707}
          />
          <group
            name="WGT-rig_shin_fkL"
            position={[0.417, 0.732, -0.353]}
            rotation={[-1.27, 0.074, 0.04]}
            scale={0.521}
          />
          <group
            name="WGT-rig_foot_fkL"
            position={[0.378, 0.236, -0.507]}
            rotation={[-2.691, -0.006, 0.003]}
            scale={0.324}
          />
          <group
            name="WGT-rig_toe_fkL"
            position={[0.38, 0.095, -0.215]}
            rotation={[-2.989, 0, -Math.PI]}
            scale={0.252}
          />
          <group
            name="WGT-rig_thigh_ikL"
            position={[0.454, 1.435, -0.419]}
            rotation={[-1.665, 0.053, 0.066]}
            scale={0.707}
          />
          <group
            name="WGT-rig_thigh_ik_targetL"
            position={[0.484, 0.641, 0.846]}
            rotation={[0.076, 0.056, -0.002]}
            scale={0.151}
          />
          <group
            name="WGT-rig_foot_ikL"
            position={[0.378, 0.236, -0.507]}
            scale={0.324}
          />
          <group
            name="WGT-rig_VIS_thigh_ik_poleL"
            position={[0.417, 0.732, -0.353]}
            rotation={[Math.PI / 2, 0, -0.014]}
            scale={1.204}
          />
          <group
            name="WGT-rig_thigh_tweakL"
            position={[0.454, 1.435, -0.419]}
            rotation={[-1.665, 0.053, 0.066]}
            scale={0.177}
          />
          <group
            name="WGT-rig_thigh_tweakL001"
            position={[0.436, 1.084, -0.386]}
            rotation={[-1.665, 0.053, 0.066]}
            scale={0.177}
          />
          <group
            name="WGT-rig_shin_tweakL"
            position={[0.417, 0.732, -0.353]}
            rotation={[-1.27, 0.074, 0.04]}
            scale={0.13}
          />
          <group
            name="WGT-rig_shin_tweakL001"
            position={[0.398, 0.484, -0.43]}
            rotation={[-1.27, 0.074, 0.04]}
            scale={0.13}
          />
          <group
            name="WGT-rig_foot_tweakL"
            position={[0.378, 0.236, -0.507]}
            rotation={[-2.691, -0.006, 0.003]}
            scale={0.081}
          />
          <group
            name="WGT-rig_foot_spin_ikL"
            position={[0.38, 0.095, -0.215]}
            scale={0.162}
          />
          <group
            name="WGT-rig_foot_heel_ikL"
            position={[0.378, 0.236, -0.507]}
            scale={0.162}
          />
          <group
            name="WGT-rig_toe_ikL"
            position={[0.38, 0.095, -0.215]}
            rotation={[-2.989, 0, -Math.PI]}
            scale={0.252}
          />
          <group
            name="WGT-rig_thigh_parentR"
            position={[-0.454, 1.435, -0.419]}
            rotation={[1.477, 0.053, 0.066]}
            scale={-0.177}
          />
          <group
            name="WGT-rig_thigh_fkR"
            position={[-0.454, 1.435, -0.419]}
            rotation={[1.477, 0.053, 0.066]}
            scale={-0.707}
          />
          <group
            name="WGT-rig_shin_fkR"
            position={[-0.417, 0.732, -0.353]}
            rotation={[1.872, 0.074, 0.04]}
            scale={-0.521}
          />
          <group
            name="WGT-rig_foot_fkR"
            position={[-0.378, 0.236, -0.507]}
            rotation={[0.451, -0.006, 0.003]}
            scale={-0.324}
          />
          <group
            name="WGT-rig_toe_fkR"
            position={[-0.38, 0.095, -0.215]}
            rotation={[0.152, 0, -Math.PI]}
            scale={-0.252}
          />
          <group
            name="WGT-rig_thigh_ikR"
            position={[-0.454, 1.435, -0.419]}
            rotation={[1.477, 0.053, 0.066]}
            scale={-0.707}
          />
          <group
            name="WGT-rig_thigh_ik_targetR"
            position={[-0.484, 0.641, 0.846]}
            rotation={[-3.065, 0.056, -0.002]}
            scale={-0.151}
          />
          <group
            name="WGT-rig_foot_ikR"
            position={[-0.378, 0.236, -0.507]}
            rotation={[-Math.PI, 0, 0]}
            scale={-0.324}
          />
          <group
            name="WGT-rig_VIS_thigh_ik_poleR"
            position={[-0.417, 0.732, -0.353]}
            rotation={[-Math.PI / 2, 0, -0.014]}
            scale={-1.204}
          />
          <group
            name="WGT-rig_thigh_tweakR"
            position={[-0.454, 1.435, -0.419]}
            rotation={[1.477, 0.053, 0.066]}
            scale={-0.177}
          />
          <group
            name="WGT-rig_thigh_tweakR001"
            position={[-0.436, 1.084, -0.386]}
            rotation={[1.477, 0.053, 0.066]}
            scale={-0.177}
          />
          <group
            name="WGT-rig_shin_tweakR"
            position={[-0.417, 0.732, -0.353]}
            rotation={[1.872, 0.074, 0.04]}
            scale={-0.13}
          />
          <group
            name="WGT-rig_shin_tweakR001"
            position={[-0.398, 0.484, -0.43]}
            rotation={[1.872, 0.074, 0.04]}
            scale={-0.13}
          />
          <group
            name="WGT-rig_foot_tweakR"
            position={[-0.378, 0.236, -0.507]}
            rotation={[0.451, -0.006, 0.003]}
            scale={-0.081}
          />
          <group
            name="WGT-rig_foot_spin_ikR"
            position={[-0.38, 0.095, -0.215]}
            rotation={[-Math.PI, 0, 0]}
            scale={-0.162}
          />
          <group
            name="WGT-rig_foot_heel_ikR"
            position={[-0.378, 0.236, -0.507]}
            rotation={[-Math.PI, 0, 0]}
            scale={-0.162}
          />
          <group
            name="WGT-rig_toe_ikR"
            position={[-0.38, 0.095, -0.215]}
            rotation={[0.152, 0, -Math.PI]}
            scale={-0.252}
          />
          <group name="WGT-rig_root" scale={4.024} />
        </group>


        

      </a.group>
    );
  }

  useGLTF.preload("/PortfolioMainCharacterThreeJSReady2.glb");

  export default MainCharacter;
