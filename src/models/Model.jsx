/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, Cylinder,
  MeshReflectorMaterial, } from "@react-three/drei";
import world from '../assets/3d/worldReady.glb'
import { CoefficientCombineRule, RigidBody, CylinderCollider } from "@react-three/rapier";

import Card from '../components/Card'




export function Model(props) {
  const { nodes, materials } = useGLTF(world);

  function NavigateToPage(){
    console.log("Navigating to page: " )
  }

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tiles.geometry}
        material={materials.stone}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.branch.geometry}
        material={materials.land}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.water.geometry}
        material={materials.water}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bucket.geometry}
        material={materials.metal}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.log.geometry}
        material={materials.land}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.rocks.geometry}
        material={materials.stone}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.floatingPlatform.geometry}
        material={materials.grassColor}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.fence3.geometry}
        material={materials.land}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.fence2.geometry}
        material={materials.land}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.fence1.geometry}
        material={materials.land}
      />


      <group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.table.geometry}
          material={materials.land}
        />

      </group>
      
     
      <group>
      
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.guitar.geometry}
          material={materials.guitar}
        />
      </group>
      

      <RigidBody type='fixed' colliders='trimesh' position={[-1.9,0.5,2.7]}>

        <mesh
          castShadow
          receiveShadow
          geometry={nodes.invisiblewall.geometry}
          material={nodes.invisiblewall.material}
        >
        <meshPhongMaterial color="#ff0000" opacity={0} transparent />

        </mesh>
      </RigidBody>
      

      <RigidBody type="fixed" colliders='cuboid' friction={1} position={[-2,1,2]} >
        <mesh 
        
          castShadow
          receiveShadow
          geometry={nodes.floor.geometry}
          //material={nodes.floor.material}
        >
        <meshPhongMaterial color="#ff0000" opacity={0} transparent />
      </mesh>
    
      </RigidBody>


      



      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane011.geometry}
        material={materials.grassColor}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane011_1.geometry}
        material={materials.treeLeaves}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder009.geometry}
        material={materials.metal}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder009_1.geometry}
        material={materials.barrelBody}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.rock020.geometry}
        material={materials.treeLeaves}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.rock020_1.geometry}
        material={materials.barrelBody}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube006.geometry}
        material={materials.land}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube006_1.geometry}
        material={materials.white}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube006_2.geometry}
        material={materials.standardRed}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BezierCurve.geometry}
        material={materials.stone}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BezierCurve_1.geometry}
        material={materials.land}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020.geometry}
        material={materials.stone}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_1.geometry}
        material={materials.houseWood}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_2.geometry}
        material={materials.land}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_3.geometry}
        material={materials.grassColor}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_4.geometry}
        material={materials.houseWall}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_5.geometry}
        material={materials.roof}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_6.geometry}
        material={materials.lightSource}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_7.geometry}
        material={materials.darkHouseWood}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_8.geometry}
        material={materials.chimney}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_9.geometry}
        material={materials.metal}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_10.geometry}
        material={materials.redTile2}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_11.geometry}
        material={materials.standardRed}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane020_12.geometry}
        material={materials.redTile1}
      />

      {/* Portal Mesh*/}
      <group>
        <mesh
          geometry={nodes.Plane005.geometry}
          material={materials.stone}
        />

        <mesh
      
          geometry={nodes.Plane005_2.geometry}
          material={materials.water}
        />
        <mesh
        
          geometry={nodes.Plane005_1.geometry}
          material={materials.white}
        />
      </group>
      
      



      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={materials.darkHouseWood}
      />

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004_1.geometry}
        material={materials.lightSource}
      />

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004_2.geometry}
        material={materials.metal}
      />

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004_3.geometry}
        material={materials.land}
      />

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004_4.geometry}
        material={materials.chimney}
      />

    </group>
  );
}

useGLTF.preload("/worldReady.glb");



